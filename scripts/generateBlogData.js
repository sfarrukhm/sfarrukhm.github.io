// scripts/generateBlogData.js
const fs = require('fs');
const path = require('path');
const matter = require('gray-matter');

const postsDirectory = path.join(process.cwd(), 'src/blog-posts');

function generateBlogData() {
  // Get all .md files in the blog-posts directory
  const filenames = fs.readdirSync(postsDirectory)
    .filter(filename => filename.endsWith('.md'));

  // Process each file
  const postsData = filenames.map(filename => {
    const filePath = path.join(postsDirectory, filename);
    const fileContents = fs.readFileSync(filePath, 'utf8');

    // Parse frontmatter
    const { data, content } = matter(fileContents);

    // Generate slug from filename
    const slug = filename.replace(/\.md$/, '');

    return {
      slug,
      content,
      ...data
    };
  });

  // Generate the blog data file
  const blogDataContent = `
// This file is automatically generated - do not edit manually
// Generated on ${new Date().toISOString()}

export const getAllBlogPosts = () => {
  return ${JSON.stringify(
    postsData.map(post => ({
      slug: post.slug,
      title: post.title,
      date: post.date,
      excerpt: post.excerpt || post.content.substring(0, 150) + '...',
      tags: post.tags || []
    })),
    null,
    2
  )};
};

export const getBlogPost = (slug) => {
  const posts = {
    ${postsData.map(post => `
    '${post.slug}': {
      title: ${JSON.stringify(post.title)},
      date: ${JSON.stringify(post.date)},
      tags: ${JSON.stringify(post.tags || [])},
      content: ${JSON.stringify(post.content)}
    }`).join(',')}
  };

  return posts[slug] || null;
};
`;

  // Write the file
  fs.writeFileSync(
    path.join(process.cwd(), 'src/utils/blogData.js'),
    blogDataContent
  );

  console.log(`Generated blog data for ${postsData.length} posts`);
}

generateBlogData();
