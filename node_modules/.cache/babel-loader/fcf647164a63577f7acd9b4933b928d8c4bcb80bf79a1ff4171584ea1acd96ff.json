{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\my_portfolio\\\\src\\\\blog-pages\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogPost() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    async function loadPost() {\n      try {\n        const res = await fetch(`/blogs/${slug}.md`);\n        const text = await res.text();\n        const {\n          data,\n          content\n        } = matter(text);\n        setPost({\n          ...data,\n          content\n        });\n      } catch (err) {\n        console.error(\"Error loading blog:\", err);\n      }\n    }\n    loadPost();\n  }, [slug]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"p-6\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"prose dark:prose-invert mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), \"                                \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500\",\n      children: post.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogPost, \"DeOE0OwmZYOBU6pfXnKsGT+3Hig=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","matter","ReactMarkdown","jsxDEV","_jsxDEV","BlogPost","_s","slug","post","setPost","loadPost","res","fetch","text","data","content","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","date","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/my_portfolio/src/blog-pages/BlogPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport matter from \"gray-matter\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport default function BlogPost() {\r\n  const { slug } = useParams();\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadPost() {\r\n      try {\r\n        const res = await fetch(`/blogs/${slug}.md`);\r\n        const text = await res.text();\r\n        const { data, content } = matter(text);\r\n        setPost({ ...data, content });\r\n      } catch (err) {\r\n        console.error(\"Error loading blog:\", err);\r\n      }\r\n    }\r\n    loadPost();\r\n  }, [slug]);\r\n\r\n  if (!post) return <p className=\"p-6\">Loading...</p>;\r\n\r\n  return (\r\n    <article className=\"prose dark:prose-invert mx-auto p-6\">\r\n    <h1>{post.title}</h1>                                {/* ✅ string */}\r\n    <p className=\"text-sm text-gray-500\">{post.date}</p> {/* ✅ string */}\r\n    <ReactMarkdown>{post.content}</ReactMarkdown>        {/* ✅ string */}\r\n  </article>\r\n\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeW,QAAQA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAUL,IAAI,KAAK,CAAC;QAC5C,MAAMM,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,MAAM;UAAEC,IAAI;UAAEC;QAAQ,CAAC,GAAGd,MAAM,CAACY,IAAI,CAAC;QACtCJ,OAAO,CAAC;UAAE,GAAGK,IAAI;UAAEC;QAAQ,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;MAC3C;IACF;IACAN,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,IAAI,CAACC,IAAI,EAAE,oBAAOJ,OAAA;IAAGe,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnD,oBACEpB,OAAA;IAASe,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBACxDhB,OAAA;MAAAgB,QAAA,EAAKZ,IAAI,CAACiB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,oCAAgC,eACrDpB,OAAA;MAAGe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAEZ,IAAI,CAACkB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACrDpB,OAAA,CAACF,aAAa;MAAAkB,QAAA,EAAEZ,IAAI,CAACO;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,YAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAGZ;AAAClB,EAAA,CA5BuBD,QAAQ;EAAA,QACbL,SAAS;AAAA;AAAA2B,EAAA,GADJtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}