{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\my_portfolio\\\\src\\\\blog-pages\\\\BlogList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport matter from \"gray-matter\";\n\n// list of blog file names (later can be automated)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blogFiles = [\"my-first-blog.md\", \"second-post.md\"];\nexport default function BlogList() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    async function loadBlogs() {\n      const loaded = await Promise.all(blogFiles.map(async file => {\n        const res = await fetch(`/blogs/${file}`); // public/blogs/\n        const text = await res.text();\n        const {\n          data\n        } = matter(text);\n        return {\n          ...data,\n          slug: data.slug\n        };\n      }));\n      setBlogs(loaded);\n    }\n    loadBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${blog.slug}`,\n        className: \"block p-4 bg-gray-100 dark:bg-gray-800 rounded-xl shadow hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 3\n        }, this), \"   \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: blog.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 3\n        }, this), \"     \"]\n      }, blog.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogList, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useState","useEffect","Link","matter","jsxDEV","_jsxDEV","blogFiles","BlogList","_s","blogs","setBlogs","loadBlogs","loaded","Promise","all","map","file","res","fetch","text","data","slug","className","children","fileName","_jsxFileName","lineNumber","columnNumber","blog","to","title","date","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/my_portfolio/src/blog-pages/BlogList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport matter from \"gray-matter\";\r\n\r\n// list of blog file names (later can be automated)\r\nconst blogFiles = [\r\n  \"my-first-blog.md\",\r\n  \"second-post.md\"\r\n];\r\n\r\nexport default function BlogList() {\r\n  const [blogs, setBlogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadBlogs() {\r\n      const loaded = await Promise.all(\r\n        blogFiles.map(async (file) => {\r\n          const res = await fetch(`/blogs/${file}`); // public/blogs/\r\n          const text = await res.text();\r\n          const { data } = matter(text);\r\n          return { ...data, slug: data.slug };\r\n        })\r\n      );\r\n      setBlogs(loaded);\r\n    }\r\n    loadBlogs();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Blog</h1>\r\n      <div className=\"grid gap-4\">\r\n        {blogs.map((blog) => (\r\n          <Link\r\n  key={blog.slug}\r\n  to={`/blog/${blog.slug}`}\r\n  className=\"block p-4 bg-gray-100 dark:bg-gray-800 rounded-xl shadow hover:shadow-lg transition\"\r\n>\r\n  <h2 className=\"text-xl font-semibold\">{blog.title}</h2>   {/* ✅ string */}\r\n  <p className=\"text-sm text-gray-500\">{blog.date}</p>     {/* ✅ string */}\r\n</Link>\r\n\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,aAAa;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAChB,kBAAkB,EAClB,gBAAgB,CACjB;AAED,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeU,SAASA,CAAA,EAAG;MACzB,MAAMC,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC9BR,SAAS,CAACS,GAAG,CAAC,MAAOC,IAAI,IAAK;QAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAUF,IAAI,EAAE,CAAC,CAAC,CAAC;QAC3C,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,MAAM;UAAEC;QAAK,CAAC,GAAGjB,MAAM,CAACgB,IAAI,CAAC;QAC7B,OAAO;UAAE,GAAGC,IAAI;UAAEC,IAAI,EAAED,IAAI,CAACC;QAAK,CAAC;MACrC,CAAC,CACH,CAAC;MACDX,QAAQ,CAACE,MAAM,CAAC;IAClB;IACAD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAASiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACtBlB,OAAA;MAAIiB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDtB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBd,KAAK,CAACM,GAAG,CAAEa,IAAI,iBACdvB,OAAA,CAACH,IAAI;QAEb2B,EAAE,EAAE,SAASD,IAAI,CAACP,IAAI,EAAG;QACzBC,SAAS,EAAC,qFAAqF;QAAAC,QAAA,gBAE/FlB,OAAA;UAAIiB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEK,IAAI,CAACE;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,OAAG,eAC1DtB,OAAA;UAAGiB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEK,IAAI,CAACG;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,SAAK;MAAA,GALpDC,IAAI,CAACP,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CAEG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACnB,EAAA,CApCuBD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}